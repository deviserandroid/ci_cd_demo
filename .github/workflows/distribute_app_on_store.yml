name: Build App and Distribute it on PlayStore and AppStore

on:
  pull_request:
    branches:
      - release/beta

  push:
    branches:
      - release/beta

jobs:

  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Basic Setup via Composite
        uses: ./.github/action_basic_setup


      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
        
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
        
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles



      - name: Install Profile
        uses: nickwph/apple-build-certificate-action@v1
        with:
          certificate-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.P12_PASSWORD }}

      - uses: nickwph/apple-provisioning-profile-action@v1   # Optional: Recommend to use with apple-provisioning-profile-action
        with:
          profile-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}

      - name: Update XCode to use signing profile
        run: xcode-project use-profiles

      - name: Fetch plugins Flutter Project
        run: flutter pub get
        shell: bash

      - name: Build iOS
        run: flutter build ios

      - name: Export Archive
        run: flutter build ipa --release
        working-directory: ./

      - run: mkdir Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - run: mv Runner.app/ Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - run: ls -R build/ios/archive/Runner.xcarchive/Products/Applications/Payload

      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - name: Validate IPA
        run: codesign -vvv --deep --strict FlutterIpaExport.ipa
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

