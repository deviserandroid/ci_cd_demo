name: Build App and Distribute it on PlayStore and AppStore

on:
  pull_request:
    branches:
      - release/beta

  push:
    branches:
      - release/beta

jobs:
  build-android:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Basic Setup via Composite
        uses: ./.github/action_basic_setup

      - name: Build Android App
        uses: ./.github/action_build_android_app

      - name: Upload Android App
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: "build/app/outputs/flutter-apk/app-release.apk"

  distribute:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Download a Android APK
        uses: actions/download-artifact@v4.1.8
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: "app-release.apk" # "app-release.apk" # optional
          # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
          path: ".github/artifacts/" # optional
          # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
          # pattern: # optional
          # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
          # merge-multiple: # optional, default is false
          # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
          # github-token: # optional
          # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
          # repository: # optional, default is ${{ github.repository }}
          # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
          # run-id: # optional, default is ${{ github.run_id }}

      - name: List downloaded artifacts
        run: ls -la .github/artifacts
        shell: bash

      # PlayStore Distribution

  build-ios:
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Basic Setup via Composite
        uses: ./.github/action_basic_setup

      - name: Fetch plugins Flutter Project
        run: flutter pub get
        shell: bash

      - name: Set Up CocoaPods
        run: |
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer          
          cd ios 
            if [ -f "Podfile" ]; then echo "Podfile exists."; else pod init; fi
            pod deintegrate
            pod install
            pod update

      - name: Install Profile
        uses: nickwph/apple-build-certificate-action@v1
        with:
          certificate-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.P12_PASSWORD }}

      - uses: nickwph/apple-provisioning-profile-action@v1   # Optional: Recommend to use with apple-provisioning-profile-action
        with:
          profile-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}

      - name: Build iOS
        run: flutter build ios

      - name: Export Archive
        run: flutter build ipa --release
        working-directory: ./

      - run: mkdir Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - run: mv Runner.app/ Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - run: ls -R build/ios/archive/Runner.xcarchive/Products/Applications/Payload

      - name: Zip output
        run: zip -qq -r -9 FlutterIpaExport.ipa Payload
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

      - name: Upload to App Store
        env:
          ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
          KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }}
          PRIVATE_KEY: ${{ secrets.APP_STORE_PRIVATE_KEY }}
        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications
        run: |
            mkdir ~/private_keys
            echo "$PRIVATE_KEY" | base64 --decode > ~/private_keys/AuthKey_WSN2L2RV96.p8
          echo "LOGS: Issuer ID: $ISSUER_ID"
          echo "LOGS: KEY_ID: $KEY_ID"
          echo "LOGS: PRIVATE_KEY: $PRIVATE_KEY"
            chmod 600 ~/private_keys/AuthKey_WSN2L2RV96.p8
            xcrun altool --upload-package --type ios --file FlutterIpaExport.ipa \
              --apiKey $KEY_ID --apiIssuer $ISSUER_ID --privateKey ~/private_keys/AuthKey_WSN2L2RV96.p8
    
          

      #      - name: Validate IPA
      #        run: codesign -vvv --deep --strict FlutterIpaExport.ipa
      #        working-directory: build/ios/archive/Runner.xcarchive/Products/Applications

  # Job 4 (Depends upon Job 3)


  notify-team:
    runs-on: macos-latest
    needs:
      - build-ios
      #- distribute-ipa
    steps:
      - name: Send to Slack
        # You may pin to the exact commit or the version.
        # uses: slackapi/slack-github-action@485a9d42d3a73031f12ec201c457e2162c45d02d
        uses: slackapi/slack-github-action@v2.0.0
        with:
          # If the step exits with an error on errors or continues.
          errors: true # optional, default is false
          # The Slack API method to call.
          method: "chat.postMessage" # optional
          # Attributes that create the content of the request using JSON or YAML.
          # payload-file-path: ".github/slack_payload.json" # optional
          token: ${{ secrets.SLACK_BOT_TOKEN }} # optional
          payload: |
            channel: "${{ secrets.SLACK_CHANNEL_ID }}"
            text: "Hello Team, Android and iOS apps available on the PlayStore and AppStore for testing."
